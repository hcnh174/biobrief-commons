package org.biobrief.services;

import org.biobrief.util.HashMapRestCache;
import org.biobrief.util.MessageWriter;
import org.biobrief.util.RestCache;
import org.biobrief.util.RestHelper;
import org.biobrief.util.RestHelper.Headers;
import org.biobrief.util.StringHelper;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

@Service
public class RestService
{
	private final RestTemplate restTemplate;
	private final RestCache cache;
	private Integer millis=10000;

	public RestService(RestTemplate restTemplate, RestCache cache)
	{
		this.restTemplate=restTemplate;
		this.cache=cache;
	}
	
	public RestService()
	{
		this(new RestTemplate(), new HashMapRestCache());
	}
	
	public RestTemplate getRestTemplate()
	{
		return restTemplate;
	}
	
	public String get(String url, MessageWriter out)
	{
		String key=RestHelper.createKey(url);
		if (cache.containsKey(key))
			return cache.getValue(key);
		String json=RestHelper.get(restTemplate, url, out);
		setValue(key, json);
		sleep(out);
		return json;
	}
	
	public String get(String url, Headers headers, MessageWriter out)
	{
		String key=RestHelper.createKey(url);
		if (cache.containsKey(key))
			return cache.getValue(key);
		String json=RestHelper.get(restTemplate, url, headers, out);
		setValue(key, json);
		sleep(out);
		return json;
	}
	
	public <P> String post(String url, P params, MessageWriter out)
	{
		String key=RestHelper.createKey(url, params);
		if (cache.containsKey(key))
			return cache.getValue(key);
		String json=RestHelper.post(restTemplate, url, params, out);
		setValue(key, json);
		sleep(out);
		return json;
	}
	
	public String dump()
	{
		return StringHelper.toString(cache.getKeys());
	}
	
	private void setValue(String key, String json)
	{
		cache.setValue(key, json);
	}
	
	private void sleep(MessageWriter out)
	{
		RestHelper.sleep(out);
	}
}
