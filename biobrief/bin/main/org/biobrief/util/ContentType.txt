package org.hlsg.util;

public class ContentType
{
	public static final String HTML="text/html";
	public static final String PLAIN="text/plain";
	public static final String TXT="text/txt";
	public static final String XML="text/xml";
	public static final String PDF="application/pdf";
	public static final String JAVASCRIPT="application/x-javascript";
	public static final String JSON="application/json";
	public static final String JPEG="image/jpeg";
	public static final String PNG="image/png";
	public static final String EMF="image/emf";
	public static final String SVG="image/svg+xml";
	//public static final String XLS="application/vnd.ms-excel";
	public static final String DOC="application/msword";
	public static final String XLS="application/vnd.ms-excel";//"application/ms-excel";
	public static final String PPT="application/vnd.ms-powerpoint";
	//public static final String DOCX="application/vnd.msword.document.12";
	public static final String DOCX="application/vnd.openxmlformats-officedocument.wordprocessingml.document";
	public static final String XLSX = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
	public static final String PPTX = "application/vnd.openxmlformats-officedocument.presentationml.presentation";
	
	public static String findByFilename(String filename)
	{
		return findByExtension(FileHelper.getSuffix(filename));
	}
	
	public static String findByExtension(String suffix)
	{
		if (suffix.startsWith("."))
			suffix=suffix.substring(1);
		if (suffix.equalsIgnoreCase("html"))
			return HTML;
		if (suffix.equalsIgnoreCase("txt"))
			return TXT;
		if (suffix.equalsIgnoreCase("xml"))
			return XML;
		if (suffix.equalsIgnoreCase("pdf"))
			return PDF;
		if (suffix.equalsIgnoreCase("js"))
			return JAVASCRIPT;
		if (suffix.equalsIgnoreCase("json"))
			return JSON;
		if (suffix.equalsIgnoreCase("jpeg") || suffix.equalsIgnoreCase("jpg"))
			return JPEG;
		if (suffix.equalsIgnoreCase("png"))
			return PNG;
		if (suffix.equalsIgnoreCase("svg"))
			return SVG;
		if (suffix.equalsIgnoreCase("xls"))
			return XLS;
		if (suffix.equalsIgnoreCase("xlsx"))
			return XLSX;
		if (suffix.equalsIgnoreCase("docx"))
			return DOCX;
		if (suffix.equalsIgnoreCase("pptx"))
			return PPTX;
		if (suffix.equalsIgnoreCase("emf"))
			return EMF;
		throw new CException("no handler for suffix type: "+suffix);
	}
}

